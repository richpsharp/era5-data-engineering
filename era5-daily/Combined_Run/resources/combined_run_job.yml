############### The main job for combined_run ############ #### ######
############ ### #### #### ###### #### ### ### ####### #### ### ### ####

targets:
  dev:
    mode: development
    run_as:
      - service_principal_name: "0dbc3b87-0681-43d4-b52e-53bce65fcae5"
    presets:
      trigger_pause_status: PAUSED  # Define a schedule for deployment. PAUSED means schedule is paused.
      jobs_max_concurrent_runs: 10
      tags:
        environment: development
        team: data-engineering

  staging:
    mode: production
    run_as:
      - service_principal_name: "0dbc3b87-0681-43d4-b52e-53bce65fcae5"  
    presets:
      trigger_pause_status: PAUSED  # Set to ACTIVE to enable scheduling
      jobs_max_concurrent_runs: 20  # Set a different limit for production if needed
      tags:
        environment: staging
        team: data-engineering


resources:
  jobs:
    era5_source_to_staging_job:
      name: era5_source_to_staging_job
      permissions:
        - service_principal_name: "0dbc3b87-0681-43d4-b52e-53bce65fcae5"
          level: CAN_MANAGE   ## use CAN_MANAGE to gain access to UC cluster
      tasks:
        - task_key: unit_tests_task
          job_cluster_key: era5_source_to_staging  # job cluster key
          notebook_task:
            notebook_path: ../tests/01_Source_to_Staging/source-to-staging-run-unit-test.py

        - task_key: run_on_sample_task
          depends_on:
            - task_key: unit_tests_task
          job_cluster_key: era5_source_to_staging  # job cluster key
          notebook_task:
            notebook_path: ../src/01_Source_to_Staging/01_Source_to_Staging.py

        - task_key: data_quality_spatial_dimension_check_task
          depends_on:
            - task_key: run_on_sample_task  # Depends on the previous notebook
          job_cluster_key: era5_source_to_staging  # job cluster key
          notebook_task:
            notebook_path: ../src/01_Source_to_Staging/01_Data_Quality_Spatial_Dimension_Check.py  # Path to the new notebook

      job_clusters:
        - job_cluster_key: era5_source_to_staging  # job cluster key
          new_cluster:
            spark_version: 15.4.x-scala2.12 # Trying with a higher spark version 
            node_type_id: r6id.xlarge  # node type ##   
            custom_tags: 
              team: "data-engineering"
              pipeline: "era5-source-to-staging"
            aws_attributes:
              first_on_demand: 1
            autoscale:
              min_workers: 2  
              max_workers: 8  
            data_security_mode: "SINGLE_USER"  # Enforcing Single user access mode
            single_user_name: "0dbc3b87-0681-43d4-b52e-53bce65fcae5"  # unique identifier

    

    era5_source_to_bronze_country_boundaries_job:
      name: era5_source_to_bronze_country_boundaries_job
      depends_on: 
        - era5_source_to_staging_job  # Depends on the previous job
      permissions:
        - service_principal_name: "0dbc3b87-0681-43d4-b52e-53bce65fcae5"
          level: CAN_MANAGE   ## use CAN_MANAGE to gain access to UC cluster

      tasks:
        - task_key: unit_tests_task
          job_cluster_key: era5_country_boundaries
          notebook_task:
            notebook_path: ../tests/02_Source_to_Bronze_Country_Boundaries/source_to_bronze_countryboundaries_run-unit-test.py

        - task_key: run_on_sample_task
          depends_on:
            - task_key: unit_tests_task
          job_cluster_key: era5_country_boundaries 
          notebook_task:
            notebook_path: ../src/02_Source_to_Bronze_Country_Boundaries/02_Source_to_Bronze_Country_Boundaries.py

      job_clusters:
        - job_cluster_key: era5_country_boundaries 
          new_cluster:
            spark_version: 15.4.x-scala2.12  # Trying with a higher spark version 
            node_type_id: r6id.xlarge  # node type
            custom_tags:
              team: "data-engineering"
              pipeline: "era5-source-to-bronze-country-boundaries" 
            aws_attributes:
              first_on_demand: 1
            autoscale:
              min_workers: 2  # Minimum workers 
              max_workers: 8  # Maximum workers 
            data_security_mode: "SINGLE_USER"  # Enforcing Single user access mode
            single_user_name: "0dbc3b87-0681-43d4-b52e-53bce65fcae5"  # ApplicationID/ClientID

  

    era5_staging_to_bronze_interpolation_job:
      name: era5_staging_to_bronze_interpolation_job
      depends_on: 
        - era5_source_to_bronze_country_boundaries_job  # Depends on the previous job

      permissions:
        - service_principal_name: "0dbc3b87-0681-43d4-b52e-53bce65fcae5"
          level: CAN_MANAGE   ## use CAN_MANAGE to gain access to UC cluster

      tasks:
        - task_key: unit_tests_task
          job_cluster_key: era5_staging_to_bronze_interpolation  # Updated job cluster key
          notebook_task:
            notebook_path: ../tests/02_Staging_to_Bronze/staging-to-bronze-run-unit-test.py

        - task_key: run_on_sample_task
          depends_on:
            - task_key: unit_tests_task
          job_cluster_key: era5_staging_to_bronze_interpolation  # Updated job cluster key
          notebook_task:
            notebook_path: ../src/02_Staging_to_Bronze/02_Staging_to_Bronze.py

        - task_key: data_value_check_task
          depends_on:
            - task_key: run_on_sample_task  # Depends on the previous notebook
          job_cluster_key: era5_staging_to_bronze_interpolation  # Updated job cluster key
          notebook_task:
            notebook_path: ../src/02_Staging_to_Bronze/02_Data_Value_Check.py  # Path to notebook

        - task_key: date_range_check_task
          depends_on:
            - task_key: data_value_check_task  # Depends on the data value check notebook
          job_cluster_key: era5_staging_to_bronze_interpolation  # Updated job cluster key
          notebook_task:
            notebook_path: ../src/02_Staging_to_Bronze/02_Date_Range_Check.py  # Path to notebook

        - task_key: data_duplication_check_task
          depends_on:
            - task_key: date_range_check_task  # Depends on the date range check notebook
          job_cluster_key: era5_staging_to_bronze_interpolation  # Updated job cluster key
          notebook_task:
            notebook_path: ../src/02_Staging_to_Bronze/02_Check_Data_Duplication.py  # Path to notebook

      job_clusters:
        - job_cluster_key: era5_staging_to_bronze_interpolation  # Updated job cluster key
          new_cluster:
            spark_version: 15.4.x-scala2.12  # Trying with a higher spark version 
            node_type_id: r6id.xlarge  # node type
            custom_tags: 
              team: "data-engineering"
              pipeline: "era5-staging-to-bronze-interpolation"
            aws_attributes:
              first_on_demand: 1
            autoscale:
              min_workers: 2  # minimum workers
              max_workers: 8  # maximum workers
            data_security_mode: "SINGLE_USER"  # Enforcing Single user access mode
            single_user_name: "0dbc3b87-0681-43d4-b52e-53bce65fcae5"  # ApplicationID/ClientID



    era5_bronze_to_silver_country_indices_job:
      name: era5_bronze_to_silver_country_indices_job
      depends_on: 
        - era5_staging_to_bronze_interpolation_job  # Depends on the previous job 

      permissions:
        - service_principal_name: "0dbc3b87-0681-43d4-b52e-53bce65fcae5"
          level: CAN_MANAGE   ## use CAN_MANAGE to gain access to UC cluster

      tasks:
        - task_key: unit_tests_task
          job_cluster_key: era5_country_indices
          notebook_task:
            notebook_path: ../tests/03_Bronze_to_Silver_Country_Indices/bronze-to-silver-countryindices-run-unit-test.py 

        - task_key: unit_tests_task_2
          depends_on:
            - task_key: unit_tests_task
          job_cluster_key: era5_country_indices  
          notebook_task:
            notebook_path: ../tests/03_Bronze_to_Silver_Country_Indices/df-tessellate-bronze-to-silver-countryindices-run-unit-test.py

        - task_key: ingest_countries
          depends_on:
            - task_key: unit_tests_task_2
          job_cluster_key: era5_country_indices  
          notebook_task:
            notebook_path: ../src/03_Bronze_to_Silver_Country_Indices/01_Ingest_Countries.py 


        - task_key: validate_countries
          depends_on:
            - task_key: ingest_countries
          job_cluster_key: era5_country_indices  
          notebook_task:
            notebook_path: ../src/03_Bronze_to_Silver_Country_Indices/02_Validate_Countries.py


        - task_key: tessellate_countries
          depends_on:
            - task_key: validate_countries
          job_cluster_key: era5_country_indices  
          notebook_task:
            notebook_path: ../src/03_Bronze_to_Silver_Country_Indices/03_Tessellate_Countries.py 


        - task_key: viz_countries
          depends_on:
            - task_key: tessellate_countries
          job_cluster_key: era5_country_indices  
          notebook_task:
            notebook_path: ../src/03_Bronze_to_Silver_Country_Indices/04_Viz_Countries.py 

        - task_key: union_chips
          depends_on:
            - task_key: viz_countries
          job_cluster_key: era5_country_indices  
          notebook_task:
            notebook_path: ../src/03_Bronze_to_Silver_Country_Indices/05_Union_Chips.py 


      job_clusters:
        - job_cluster_key: era5_country_indices
          new_cluster:
            spark_version: 13.3.x-scala2.12  # older Spark version for mosaic
            node_type_id: r5d.4xlarge  # node type
            custom_tags:
              team: "data-engineering"
              pipeline: "era5-bronze-to-silver-country-indices"
            aws_attributes:
              first_on_demand: 1
            runtime_engine: "PHOTON"  # Enabling Photon acceleration
            init_scripts:
              - volumes:
                  destination: "/Volumes/era5-daily-data/init_scripts/geospatial/mosaic-gdal-init.sh"
            autoscale:
              min_workers: 4
              max_workers: 8 
            data_security_mode: "SINGLE_USER"  # Enforcing Single user access mode
            single_user_name: "0dbc3b87-0681-43d4-b52e-53bce65fcae5"  # ApplicationID/ClientID



    era5_bronze_to_silver_approximate_join_job:
      name: era5_bronze_to_silver_approximate_join_job

      permissions:
        - service_principal_name: "0dbc3b87-0681-43d4-b52e-53bce65fcae5"
          level: CAN_MANAGE   ## use CAN_MANAGE to gain access to UC cluster

      tasks:
        - task_key: unit_tests_task
          job_cluster_key: era5_approximate_join  # job cluster key
          notebook_task:
            notebook_path: ../tests/03_Bronze_to_Silver_Approximate_Join/bronze-to-silver-approximate-join-run-unit-test.py

        - task_key: run_on_sample_task
          depends_on:
            - task_key: unit_tests_task
          job_cluster_key: era5_approximate_join  # job cluster key
          notebook_task:
            notebook_path: ../src/03_Bronze_to_Silver_Approximate_Join/03_Bronze_to_Silver_era5_country_approximate_join_autoloader.py 


        - task_key: data_duplication_check_task
          depends_on:
            - task_key: run_on_sample_task  # Depends on the run on sample task 
          job_cluster_key: era5_approximate_join  # Updated job cluster key
          notebook_task:
            notebook_path: ../src/03_Bronze_to_Silver_Approximate_Join/03_Check_Data_Duplication_Approximate_Join.py  
 

      job_clusters:
        - job_cluster_key: era5_approximate_join  # job cluster key
          new_cluster:
            spark_version: 15.4.x-scala2.12  # Trying with a higher spark version 
            node_type_id: r6id.xlarge  # node type ##
            custom_tags: 
              team: "data-engineering"
              pipeline: "era5-bronze-to-silver-approximate-join"
            aws_attributes:
              first_on_demand: 1
            runtime_engine: "PHOTON"  # Enabling Photon acceleration
            autoscale:
              min_workers: 2  # Updated minimum workers
              max_workers: 8  # Updated maximum workers
            data_security_mode: "SINGLE_USER"  # Enforcing Single user access mode
            single_user_name: "0dbc3b87-0681-43d4-b52e-53bce65fcae5"  # ApplicationID/ClientID  


    era5_bronze_to_silver_strict_join_job:
      name: era5_bronze_to_silver_strict_join_job

      permissions:
        - service_principal_name: "0dbc3b87-0681-43d4-b52e-53bce65fcae5"
          level: CAN_MANAGE   ## use CAN_MANAGE to gain access to UC cluster
      
      depends_on: 
        - era5_bronze_to_silver_approximate_join_job  # Depends on the previous job

      tasks:
        - task_key: unit_tests_task
          job_cluster_key: era5_strict_join  # job cluster key
          notebook_task:
            notebook_path: ../tests/03_Bronze_to_Silver_Strict_Join/bronze-to-silver-strict-join-run-unit-test.py

        - task_key: run_on_sample_task
          depends_on:
            - task_key: unit_tests_task
          job_cluster_key: era5_strict_join  # job cluster key
          notebook_task:
            notebook_path: ../src/03_Bronze_to_Silver_Strict_Join/03_Bronze_to_Silver_era5_country_strict_join_autoloader.py  


        - task_key: data_duplication_check_task
          depends_on:
            - task_key: run_on_sample_task  # Depends on the run on sample task 
          job_cluster_key: era5_strict_join  # Updated job cluster key
          notebook_task:
            notebook_path: ../src/03_Bronze_to_Silver_Strict_Join/03_Check_Data_Duplication_Strict_Join.py   


      job_clusters:
        - job_cluster_key: era5_strict_join  # job cluster key
          new_cluster:
            spark_version: 13.3.x-scala2.12  # older Spark version for mosaic
            node_type_id: r5d.4xlarge  # node type
            custom_tags: 
              team: "data-engineering"
              pipeline: "era5-bronze-to-silver-strict-join"
            aws_attributes:
              first_on_demand: 1
            runtime_engine: "PHOTON"  # Enabling Photon acceleration
            init_scripts:
              - volumes:
                  destination: "/Volumes/era5-daily-data/init_scripts/geospatial/mosaic-gdal-init.sh"
            autoscale:
              min_workers: 2  # Updated minimum workers
              max_workers: 8  # Updated maximum workers
            data_security_mode: "SINGLE_USER"  # Enforcing Single user access mode
            single_user_name: "0dbc3b87-0681-43d4-b52e-53bce65fcae5"  # ApplicationID/ClientID



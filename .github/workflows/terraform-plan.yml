name: "Terraform Plan"

on:
  pull_request:
    branches:
      - dev-main

env:
  CONFIG_DIRECTORY: "./cluster-creation"

jobs:
  terraform:
    name: "Terraform Plan"
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false

      - name: Terraform Init
        run: terraform init
        working-directory: ${{ env.CONFIG_DIRECTORY }}
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TERRAFORM_TOKEN }}

      - name: Terraform Plan
        run: terraform plan -out=tfplan
        working-directory: ${{ env.CONFIG_DIRECTORY }}
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TERRAFORM_TOKEN }}

      - name: Upload Plan Result
        uses: actions/upload-artifact@v3
        with:
          name: terraform-plan
          path: ${{ env.CONFIG_DIRECTORY }}/tfplan

      - name: Comment Plan on PR
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Plan Output
               \`\`\`
               Plan: ${{ steps.plan-output.outputs.add }} to add, ${{ steps.plan-output.outputs.change }} to change, ${{ steps.plan-output.outputs.destroy }} to destroy.
               \`\`\`
               `;
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,    
              body: output
            });






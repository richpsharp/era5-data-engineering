name: "Deploy and Run Combined ERA5 Workflow"

on:
  push:
    branches:
      # production is critical, we always want to run the action on it
      - production
      - development
      - 'feature/**'
      - 'bugfix/**'
      - 'hotfix/**'
  pull_request:
    branches:
      - production
      - development

  workflow_dispatch:
    inputs:
      dab_target:
        description: 'DAB target to deploy (overrides branch-based selection)'
        required: false
        default: ''
        type: choice
        options:
          - ''
          - 'production'
          - 'development'
          - 'test'

jobs:
  deploy_and_run_combined_job:
    name: "deploy and run combined era5 jobs"
    runs-on: ubuntu-latest
    env:
      DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST_DEVELOPMENT }}
      DATABRICKS_CLIENT_ID: ${{ secrets.DATABRICKS_CLIENT_ID }}
      DATABRICKS_CLIENT_SECRET: ${{ secrets.DATABRICKS_CLIENT_SECRET }}
    steps:
      - name: checkout repository
        uses: actions/checkout@v3

      - name: setup databricks cli
        uses: databricks/setup-cli@main

      - name: determine DAB mode
        run: |
          # check if there's a manual override
          if [[ -n "${{ github.event.inputs.dab_target }}" ]]; then
            echo "TARGET=${{ github.event.inputs.dab_target }}" >> $GITHUB_ENV
          else
            # else, set mode based on branch name
            if [[ "$GITHUB_REF_NAME" == "production" ]]; then
              echo "TARGET=production" >> $GITHUB_ENV
            elif [[ "$GITHUB_REF_NAME" == "development" ]]; then
              echo "TARGET=development" >> $GITHUB_ENV
            else
              echo "TARGET=test" >> $GITHUB_ENV
            fi
          fi

      - name: Determine branch name for DAB tag
        id: branch
        run: echo "BRANCH=${GITHUB_REF_NAME#refs/heads/}" >> $GITHUB_OUTPUT

      - name: Inject branch name into DAB via sed
        working-directory: ./era5-daily/Combined_Run
        run: |
          # use | delimiters because branch name has a / in it
          sed -i "s|BRANCH: will_be_set_by_github_action|BRANCH: ${BRANCH}|g" databricks.yml
          cat databricks.yml
        env:
          BRANCH: ${{ steps.branch.outputs.BRANCH }}

      - name: Validate test DAB
        working-directory: ./era5-daily/Combined_Run
        run: |
          databricks bundle validate --target test

      - name: Deploy test DAB
        working-directory: ./era5-daily/Combined_Run
        run: |
          databricks bundle deploy --target test

      - name: Run the tests
        working-directory: ./era5-daily/Combined_Run
        run: |
          databricks bundle run test_era5_01_bronze_source_to_staging_job --target test

      - name: Validate target DAB
        working-directory: ./era5-daily/Combined_Run
        run: |
          databricks bundle validate --target $TARGET

      - name: Deploy target DAB
        working-directory: ./era5-daily/Combined_Run
        run: |
          databricks bundle deploy --target $TARGET

      - name: Run target
        if: ${{ env.TARGET == 'production' }}
        working-directory: ./era5-daily/Combined_Run
        run: |
          databricks bundle run test_era5_01_bronze_source_to_staging_job --target $TARGET
